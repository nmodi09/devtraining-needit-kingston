<?xml version="1.0" encoding="UTF-8"?>
<record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>false</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>false</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_58872_needit_needit</collection>
        <condition>current.isValidRecord() &amp;&amp; (current.state.changesTo(state.RESOLVED) || current.comments.changes() || current.work_notes.changes() || current.child_incidents.changes())</condition>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Update Child NeedIt</name>
        <order>200</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {

	updateChildIncidents();
function updateChildIncidents() {
	if (current.state.changesTo(state.RESOLVED) || (current.state == state.RESOLVED && current.child_incidents.changes()))
		resolveChildIncidents();
	else {
		updateChildren('comments', gs.getMessage('Comment copied from Parent Incident'));
		updateChildren('work_notes', gs.getMessage('Work note copied from Parent Incident'));
	}
}

function updateChildren(fieldName, msg) {
	var rec = new GlideRecord("NeedIt Task");
	rec.addQuery("parent", current.sys_id);
	rec.addQuery("state", "!=", state.RESOLVED);
	rec.addActiveQuery();
	rec.query();
	while (rec.next()) {
		var fieldRawValue = current.getValue(fieldName) + '';
		var fieldValue = fieldRawValue.trim();
		if (!fieldValue || fieldValue.length <= 0)
			return;
		if (fieldRawValue.indexOf(msg) == 0)
			rec[fieldName] = fieldRawValue;
		else
			rec[fieldName] = msg + ": " + fieldRawValue;
		rec.update();
	}
}

//
// Resolve active, unresolved incidents that are children of the current incident
//
function resolveChildIncidents() {
    //check if update is valid or aborted before updating child incidents
	if(current.isActionAborted())
		return;

	var incident = new GlideRecord("NeedIt Task");
	incident.addActiveQuery();
	incident.addQuery("parent", current.sys_id);
	incident.addQuery("state", "!=", state.RESOLVED);
	incident.query();
	var msg = "";
	while (incident.next()) {
		gs.print("Incident " + incident.number + ' resolved based on resolution of Parent Incident ' + current.number);
		incident.state = state.RESOLVED;
		if (incident.close_notes.nil()) {
			msg = gs.getMessage('{0} copied from Parent Incident', current.close_notes.getLabel());
			if (current.close_notes.toString().indexOf(msg) == 0)
				incident.close_notes = current.close_notes;
			else
				incident.close_notes = msg + ": " + current.close_notes;
		}
		incident.close_code = current.close_code;
		msg = gs.getMessage("Resolved based on resolution of Parent Incident.");
		if (current.comments.toString().indexOf(msg) == 0)
			incident.comments = current.comments;
		else
			incident.comments = msg + " " + current.comments;
		incident.work_notes = current.work_notes;
		incident.update();
	}
}

})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2018-04-26 10:08:58</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>4d12aec44ff51300e022ff6f9310c7af</sys_id>
        <sys_mod_count>2</sys_mod_count>
        <sys_name>Update Child NeedIt</sys_name>
        <sys_overrides/>
        <sys_package display_value="NeedIt" source="x_58872_needit">6ead8e780f603200cd674f8ce1050ed1</sys_package>
        <sys_policy/>
        <sys_scope display_value="NeedIt">6ead8e780f603200cd674f8ce1050ed1</sys_scope>
        <sys_update_name>sys_script_4d12aec44ff51300e022ff6f9310c7af</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2018-05-05 18:43:54</sys_updated_on>
        <template/>
        <when>before</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=4d12aec44ff51300e022ff6f9310c7af"/>
</record_update>
